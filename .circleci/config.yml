defaults: &default_docker
  docker:
    - image: circleci/node:13.8.0

version: 2.1

commands:
   # Exercise - Rollback
  destroy_environment:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

jobs:
  build_frontend:
    # docker:
    #   - image: circleci/node:13.8.0
    <<: *default_docker
    steps:
      - checkout
      - run: npm i
      - save_cache:
          key: 'npm-package'
          paths:
           - /src/node_modules

  lint_frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys:
           - 'npm-package'
      - run: npm i
      - run: npm run lint

  audit_frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: npm audit

  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
              --region us-east-1
  ansible_configure_server: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
              # You can get this ID in the section where you registered the SSH Key
          fingerprints:   ["4a:e1:27:2d:e3:17:ed:eb:33:6f:92:b0:19:91:fe:73"]
      - run: apk add --update ansible 
      - run: apk add --update ansible openssh
      - run: ansible-playbook -i inventory main.yml

  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test / simulate error
          command: exit 1
          # command: |
          #   URL="http://googlr.com/"
          #   # Test if website exists
          #   if curl -s --head ${URL} 
          #   then
          #     return 0
          #   else
          #     return 1
          #   fi
      - destroy_environment

workflows:
  welcome:
    jobs:
      - build_frontend
      - lint_frontend:
          requires:
            - build_frontend
      - audit_frontend:
          requires:
            - lint_frontend
      - create_infrastructure: 
          requires:
            - lint_frontend
      # - ansible_configure_server: 
      #     requires: 
      #       - create_infrastructure
      # - ansible_configure_server
      - smoke_test